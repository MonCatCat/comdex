syntax = "proto3";
package comdex.locking.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/comdex-official/comdex/x/locking/types";

// Locked is a single unit of lock by period. It's a record of locked coin
// at a specific time. It stores owner, duration, and the amount of
// coin locked.
message Lock {
  uint64 id = 1;
  string owner = 2 [ (gogoproto.moretags) = "yaml:\"owner\"" ];
  google.protobuf.Duration duration = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.jsontag) = "duration,omitempty",
    (gogoproto.moretags) = "yaml:\"duration\""
  ];
  cosmos.base.v1beta1.Coin coin = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.casttype)  = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}

// Once unlocking is triggered the lock gets deleted and its being
// added to the Unlocking and it will stay untill the duration of end time.enum
// Once entime is reached lock  is being deleted from unlocking.
message Unlocking {
  uint64 id = 1;
  string owner = 2 [ (gogoproto.moretags) = "yaml:\"owner\"" ];
  google.protobuf.Duration duration = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.jsontag) = "duration,omitempty",
    (gogoproto.moretags) = "yaml:\"duration\""
  ];
  google.protobuf.Timestamp end_time = 4 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"end_time\""
  ];
  cosmos.base.v1beta1.Coin coin = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.casttype)  = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}

message LockByOwner {
  string owner = 1 [ (gogoproto.moretags) = "yaml:\"owner\"" ];
  repeated uint64 lock_ids = 2;
}

message UnlockingByOwner {
  string owner = 1 [ (gogoproto.moretags) = "yaml:\"owner\"" ];
  repeated uint64 unlocking_ids = 2;
}