syntax = "proto3";
package comdex.rewards.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "comdex/rewards/v1beta1/params.proto";
import "comdex/rewards/v1beta1/rewards.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

option go_package = "github.com/comdex-official/comdex/x/rewards/types";


message QueryParamsRequest {}

message QueryParamsResponse {
  Params params = 1 [
    (gogoproto.nullable) = false
  ];
}


message QueryMintingRewardRequest {
  uint64 id = 1;
}

message QueryMintingRewardResponse {
  MintingRewards reward = 1
      [ (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"reward\"" ];
}

message QueryMintingRewardsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1
      [ (gogoproto.moretags) = "yaml:\"pagination\"" ];
}

message QueryMintingRewardsResponse {
  repeated MintingRewards rewards = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"rewards\""
  ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2
      [ (gogoproto.moretags) = "yaml:\"pagination\"" ];
}


service QueryService {
  rpc QueryParams(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get ="/comdex/rewards/v1beta1/params";
  }
  rpc QueryMintingReward(QueryMintingRewardRequest) returns (QueryMintingRewardResponse) {
    option (google.api.http).get = "/comdex/rewards/v1beta1/rewards/{id}";
  }
  rpc QueryMintingRewards(QueryMintingRewardsRequest) returns (QueryMintingRewardsResponse) {
    option (google.api.http).get = "/comdex/rewards/v1beta1/rewards";
  }
}
