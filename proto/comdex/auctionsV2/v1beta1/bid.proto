syntax = "proto3";
package comdex.auctionsV2.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/comdex-official/comdex/x/auctionsV2/types";

message MarketBid{
  uint64 bidding_id = 1 [
    (gogoproto.moretags) = "yaml:\"bidding_id\""
  ];

  uint64 auction_id = 2 [
    (gogoproto.moretags) = "yaml:\"auction_id\""
  ];
  cosmos.base.v1beta1.Coin collateral_token_amount = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"outflow_token_amount\"",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];

  cosmos.base.v1beta1.Coin debt_token_amount = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"inflow_token_amount\"",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];

  string bidder_address = 5 [
    (gogoproto.moretags) = "yaml:\"bidder\""
  ];

  google.protobuf.Timestamp bidding_timestamp = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true,
    (gogoproto.moretags) = "yaml:\"bidding_timestamp\""
  ];

  uint64 app_id = 7 [
    (gogoproto.moretags) = "yaml:\"app_id\""
  ];

}

message LimitOrderBid{
  uint64 app_id = 1 [
    (gogoproto.moretags) = "yaml:\"app_id\""
  ];

  uint64 bidding_id = 2 [
    (gogoproto.moretags) = "yaml:\"bidding_id\""
  ];
  string bidder_address = 3 [
    (gogoproto.moretags) = "yaml:\"bidder\""
  ];

  cosmos.base.v1beta1.Coin collateral_token_amount = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"outflow_token_amount\"",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];

  cosmos.base.v1beta1.Coin debt_token_denom = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"debt_token_denom\"",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];

  repeated uint64 auction_id = 6 [
    (gogoproto.moretags) = "yaml:\"auction_id\""
  ];

  string premium_discount = 7 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"premium_discount\""
  ];
}


// params will include for park your asset for dutch bid
// % slots above which we have to increase or decrease (step)
// withdrawal fee for taking out bid
// Closing fee for taking out collateral parked

message AuctionParams{
  uint64 auction_duration_seconds = 1 [
    (gogoproto.moretags) = "yaml:\"auction_duration_seconds\""
  ];
  string step = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"step\""
  ];
  string withdrawal_fee = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"withdrawal_fee\""
  ];
  string closing_fee = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"closing_fee\""
  ];
}





// Bidding Structs 
//1. Market Bid
//2. ACBI LIMIT ORDER BIDS


//Limit Order Bids
