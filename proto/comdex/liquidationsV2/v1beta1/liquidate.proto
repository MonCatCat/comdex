syntax = "proto3";
package comdex.liquidationsV2.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/comdex-official/comdex/x/liquidationsV2/types";
option (gogoproto.equal_all) = false;
option (gogoproto.goproto_getters_all) = false;


message LiquidationWhiteListing {

  uint64 app_id = 1 [
    (gogoproto.customname) = "AppId",
    (gogoproto.moretags) = "yaml:\"app_id\""];
//------------Auction Types defn
// true auction type - "dutch" 
//false auction type - "english"
  bool auction_type = 2 [
    (gogoproto.customname) = "AuctionType",
    (gogoproto.moretags) = "yaml:\"auction_type\""];
}


message LiquidationOffsetHolder {
  uint64 current_offset = 2;
} 


//Internal keepers are bots run by people to liquidate positions of comdex apps
//They run tx function to liquidate the positions
//External keeper function allows external projects to use comdex auction- 
//market to liquidate their positions and take part in  auctions.


message LockedVault {

  uint64 id = 1 [
    (gogoproto.customname) = "LockedVaultId",
    (gogoproto.moretags) = "yaml:\"id\""];

  uint64 app_id = 2 [
    (gogoproto.customname) = "AppId",
    (gogoproto.moretags) = "yaml:\"id\""];

  uint64 original_vault_id = 3 [
    (gogoproto.customname) = "OriginalVaultId",
    (gogoproto.moretags) = "yaml:\"id\""];

  uint64 extended_pair_vault_id = 4 [
    (gogoproto.customname) = "ExtendedPairId",
    (gogoproto.moretags) = "yaml:\"extended_pair_vault_id\""];

  string owner = 5 [
    (gogoproto.customname) = "Owner",
    (gogoproto.moretags) = "yaml:\"owner\""];

  string amount_in = 6 [
    (gogoproto.customname) = "AmountIn",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"amount_in\"",
    (gogoproto.nullable) = false];

  string amount_out = 7 [
    (gogoproto.customname) = "AmountOut",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"amount_out\"",
    (gogoproto.nullable) = false];

  string current_collateralisation_ratio = 8 [
    (gogoproto.customname) = "CurrentCollaterlisationRatio",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"current_collateralisation_ratio\""];
    
  string collateral_to_be_auctioned =9 [
    (gogoproto.nullable) = false,
    (gogoproto.customname) = "CollateralToBeAuctioned",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"collateral_to_be_auctioned\""];
  string target_debt =10 [
    (gogoproto.nullable) = false,
    (gogoproto.customname) = "TargetDebt",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"target_debt\""];
    
  google.protobuf.Timestamp liquidation_timestamp = 11 [
    (gogoproto.customname) = "LiquidationTimestamp",
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true,
    (gogoproto.moretags) = "yaml:\"liquidation_timestamp\""];

  bool is_internal_keeper = 12 [
    (gogoproto.customname) = "IsInternalKeeper",
    (gogoproto.moretags) = "yaml:\"is_intenal_keeper\""];

  string internal_keeper_address = 13 [
    (gogoproto.customname) = "InternalKeeperAddress",
    (gogoproto.moretags) = "yaml:\"internal_keeper_address\""];

  string is_external_keeper = 14 [
    (gogoproto.customname) = "IsExternalKeeper",
    (gogoproto.moretags) = "yaml:\"is_external_keeper\""];

  string external_keeper_address = 15 [
    (gogoproto.customname) = "ExternalKeeperAddress",
    (gogoproto.moretags) = "yaml:\"external_keeper_address\""];
  string fee_to_be_collected = 16 [
    (gogoproto.customname) = "FeeToBeCollected",
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"fee_to_be_collected\""];

  string structure_type = 17 [
    (gogoproto.customname) = "StructureType",
    (gogoproto.moretags) = "yaml:\"structure_type\""];

//updated_amount_out = amount_out + interest_accumulated + opening_fee_accumulated
//   // + closing_fee_accumulated
//   string updated_amount_out = 8 [
//     (gogoproto.customname) = "UpdatedAmountOut",
//     (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
//     (gogoproto.moretags) = "yaml:\"updated_amount_out\"",
//     (gogoproto.nullable) = false];

//   string initiator = 9 [
//     (gogoproto.customname) = "Initiator",
//     (gogoproto.moretags) = "yaml:\"admin\""];

//   bool is_auction_complete = 10 [
//     (gogoproto.customname) = "IsAuctionComplete",
//     (gogoproto.moretags) = "yaml:\"is_auction_complete\""];

//   bool is_auction_in_progress = 11 [
//     (gogoproto.customname) = "IsAuctionInProgress",
//     (gogoproto.moretags) = "yaml:\"is_auction_in_progress\""];

//   string cr_at_liquidation = 12 [
//     (gogoproto.customname) = "CrAtLiquidation",
//     (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
//     (gogoproto.nullable) = false,
//     (gogoproto.moretags) = "yaml:\"cr_at_liquidation\""];


//   repeated string selloff_history = 16 [
//     (gogoproto.customname) = "SellOffHistory",
//     (gogoproto.moretags) = "yaml:\"selloff_history\""];

//   string interest_accumulated = 17[
//     (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
//     (gogoproto.moretags) = "yaml:\"interest_accumulated\"",
//     (gogoproto.nullable) = false];
//   oneof kind {
//     BorrowMetaData borrow_meta_data = 18;
//   }
}










// message BorrowMetaData {
//   uint64 lending_id = 1;
//   bool is_stable_borrow = 2;
//   string stable_borrow_rate = 3 [
//     (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
//     (gogoproto.nullable) = false,
//     (gogoproto.moretags) = "yaml:\"stable_borrow_rate\""
//   ];
//   cosmos.base.v1beta1.Coin bridged_asset_amount = 4 [
//     (gogoproto.nullable) = false,
//     (gogoproto.moretags) = "yaml:\"bridged_asset_amount\"",
//     (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin"
//   ];

// }

