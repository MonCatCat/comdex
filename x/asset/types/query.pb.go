// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: comdex/asset/v1beta1/query.proto

package types

import (
	context "context"
	fmt "fmt"
	query "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QueryAssetsRequest struct {
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryAssetsRequest) Reset()         { *m = QueryAssetsRequest{} }
func (m *QueryAssetsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAssetsRequest) ProtoMessage()    {}
func (*QueryAssetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{0}
}
func (m *QueryAssetsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAssetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAssetsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAssetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAssetsRequest.Merge(m, src)
}
func (m *QueryAssetsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAssetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAssetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAssetsRequest proto.InternalMessageInfo

type QueryAssetsResponse struct {
	Assets     []Asset             `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets" yaml:"assets"`
	Pagination *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryAssetsResponse) Reset()         { *m = QueryAssetsResponse{} }
func (m *QueryAssetsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAssetsResponse) ProtoMessage()    {}
func (*QueryAssetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{1}
}
func (m *QueryAssetsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAssetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAssetsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAssetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAssetsResponse.Merge(m, src)
}
func (m *QueryAssetsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAssetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAssetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAssetsResponse proto.InternalMessageInfo

type QueryAssetRequest struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *QueryAssetRequest) Reset()         { *m = QueryAssetRequest{} }
func (m *QueryAssetRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAssetRequest) ProtoMessage()    {}
func (*QueryAssetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{2}
}
func (m *QueryAssetRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAssetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAssetRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAssetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAssetRequest.Merge(m, src)
}
func (m *QueryAssetRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAssetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAssetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAssetRequest proto.InternalMessageInfo

type QueryAssetResponse struct {
	Asset Asset `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset" yaml:"asset"`
}

func (m *QueryAssetResponse) Reset()         { *m = QueryAssetResponse{} }
func (m *QueryAssetResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAssetResponse) ProtoMessage()    {}
func (*QueryAssetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{3}
}
func (m *QueryAssetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAssetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAssetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAssetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAssetResponse.Merge(m, src)
}
func (m *QueryAssetResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAssetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAssetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAssetResponse proto.InternalMessageInfo

type QueryAssetPairsRequest struct {
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryAssetPairsRequest) Reset()         { *m = QueryAssetPairsRequest{} }
func (m *QueryAssetPairsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAssetPairsRequest) ProtoMessage()    {}
func (*QueryAssetPairsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{4}
}
func (m *QueryAssetPairsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAssetPairsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAssetPairsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAssetPairsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAssetPairsRequest.Merge(m, src)
}
func (m *QueryAssetPairsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAssetPairsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAssetPairsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAssetPairsRequest proto.InternalMessageInfo

type QueryAssetPairsResponse struct {
	PairsInfo  []PairInfo          `protobuf:"bytes,1,rep,name=pairsInfo,proto3" json:"pairsInfo" yaml:"pairs_info"`
	Pagination *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryAssetPairsResponse) Reset()         { *m = QueryAssetPairsResponse{} }
func (m *QueryAssetPairsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAssetPairsResponse) ProtoMessage()    {}
func (*QueryAssetPairsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{5}
}
func (m *QueryAssetPairsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAssetPairsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAssetPairsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAssetPairsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAssetPairsResponse.Merge(m, src)
}
func (m *QueryAssetPairsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAssetPairsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAssetPairsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAssetPairsResponse proto.InternalMessageInfo

type QueryAssetPairRequest struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *QueryAssetPairRequest) Reset()         { *m = QueryAssetPairRequest{} }
func (m *QueryAssetPairRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAssetPairRequest) ProtoMessage()    {}
func (*QueryAssetPairRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{6}
}
func (m *QueryAssetPairRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAssetPairRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAssetPairRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAssetPairRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAssetPairRequest.Merge(m, src)
}
func (m *QueryAssetPairRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAssetPairRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAssetPairRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAssetPairRequest proto.InternalMessageInfo

type QueryAssetPairResponse struct {
	PairInfo PairInfo `protobuf:"bytes,1,opt,name=pairInfo,proto3" json:"pairInfo" yaml:"pair_info"`
}

func (m *QueryAssetPairResponse) Reset()         { *m = QueryAssetPairResponse{} }
func (m *QueryAssetPairResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAssetPairResponse) ProtoMessage()    {}
func (*QueryAssetPairResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{7}
}
func (m *QueryAssetPairResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAssetPairResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAssetPairResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAssetPairResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAssetPairResponse.Merge(m, src)
}
func (m *QueryAssetPairResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAssetPairResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAssetPairResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAssetPairResponse proto.InternalMessageInfo

type QueryAppRequest struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *QueryAppRequest) Reset()         { *m = QueryAppRequest{} }
func (m *QueryAppRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAppRequest) ProtoMessage()    {}
func (*QueryAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{8}
}
func (m *QueryAppRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAppRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAppRequest.Merge(m, src)
}
func (m *QueryAppRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAppRequest proto.InternalMessageInfo

type QueryAppResponse struct {
	App AppData `protobuf:"bytes,1,opt,name=app,proto3" json:"app" yaml:"app"`
}

func (m *QueryAppResponse) Reset()         { *m = QueryAppResponse{} }
func (m *QueryAppResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAppResponse) ProtoMessage()    {}
func (*QueryAppResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{9}
}
func (m *QueryAppResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAppResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAppResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAppResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAppResponse.Merge(m, src)
}
func (m *QueryAppResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAppResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAppResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAppResponse proto.InternalMessageInfo

type QueryGovTokenByAppRequest struct {
	AppId uint64 `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty" yaml:"app_id"`
}

func (m *QueryGovTokenByAppRequest) Reset()         { *m = QueryGovTokenByAppRequest{} }
func (m *QueryGovTokenByAppRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGovTokenByAppRequest) ProtoMessage()    {}
func (*QueryGovTokenByAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{10}
}
func (m *QueryGovTokenByAppRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGovTokenByAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGovTokenByAppRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGovTokenByAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGovTokenByAppRequest.Merge(m, src)
}
func (m *QueryGovTokenByAppRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGovTokenByAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGovTokenByAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGovTokenByAppRequest proto.InternalMessageInfo

type QueryGovTokenByAppResponse struct {
	GovAssetId uint64 `protobuf:"varint,1,opt,name=gov_asset_id,json=govAssetId,proto3" json:"gov_asset_id,omitempty" yaml:"gov_asset_id"`
}

func (m *QueryGovTokenByAppResponse) Reset()         { *m = QueryGovTokenByAppResponse{} }
func (m *QueryGovTokenByAppResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGovTokenByAppResponse) ProtoMessage()    {}
func (*QueryGovTokenByAppResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{11}
}
func (m *QueryGovTokenByAppResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGovTokenByAppResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGovTokenByAppResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGovTokenByAppResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGovTokenByAppResponse.Merge(m, src)
}
func (m *QueryGovTokenByAppResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGovTokenByAppResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGovTokenByAppResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGovTokenByAppResponse proto.InternalMessageInfo

type QueryAppsRequest struct {
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryAppsRequest) Reset()         { *m = QueryAppsRequest{} }
func (m *QueryAppsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAppsRequest) ProtoMessage()    {}
func (*QueryAppsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{12}
}
func (m *QueryAppsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAppsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAppsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAppsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAppsRequest.Merge(m, src)
}
func (m *QueryAppsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAppsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAppsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAppsRequest proto.InternalMessageInfo

type QueryAppsResponse struct {
	Apps       []AppData           `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps" yaml:"apps"`
	Pagination *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryAppsResponse) Reset()         { *m = QueryAppsResponse{} }
func (m *QueryAppsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAppsResponse) ProtoMessage()    {}
func (*QueryAppsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{13}
}
func (m *QueryAppsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAppsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAppsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAppsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAppsResponse.Merge(m, src)
}
func (m *QueryAppsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAppsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAppsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAppsResponse proto.InternalMessageInfo

type QueryExtendedPairVaultRequest struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *QueryExtendedPairVaultRequest) Reset()         { *m = QueryExtendedPairVaultRequest{} }
func (m *QueryExtendedPairVaultRequest) String() string { return proto.CompactTextString(m) }
func (*QueryExtendedPairVaultRequest) ProtoMessage()    {}
func (*QueryExtendedPairVaultRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{14}
}
func (m *QueryExtendedPairVaultRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryExtendedPairVaultRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryExtendedPairVaultRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryExtendedPairVaultRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryExtendedPairVaultRequest.Merge(m, src)
}
func (m *QueryExtendedPairVaultRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryExtendedPairVaultRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryExtendedPairVaultRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryExtendedPairVaultRequest proto.InternalMessageInfo

type QueryExtendedPairVaultResponse struct {
	PairVault ExtendedPairVault `protobuf:"bytes,1,opt,name=pairVault,proto3" json:"pairVault" yaml:"pair_vault"`
}

func (m *QueryExtendedPairVaultResponse) Reset()         { *m = QueryExtendedPairVaultResponse{} }
func (m *QueryExtendedPairVaultResponse) String() string { return proto.CompactTextString(m) }
func (*QueryExtendedPairVaultResponse) ProtoMessage()    {}
func (*QueryExtendedPairVaultResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{15}
}
func (m *QueryExtendedPairVaultResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryExtendedPairVaultResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryExtendedPairVaultResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryExtendedPairVaultResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryExtendedPairVaultResponse.Merge(m, src)
}
func (m *QueryExtendedPairVaultResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryExtendedPairVaultResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryExtendedPairVaultResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryExtendedPairVaultResponse proto.InternalMessageInfo

type QueryAllExtendedPairVaultsRequest struct {
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryAllExtendedPairVaultsRequest) Reset()         { *m = QueryAllExtendedPairVaultsRequest{} }
func (m *QueryAllExtendedPairVaultsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAllExtendedPairVaultsRequest) ProtoMessage()    {}
func (*QueryAllExtendedPairVaultsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{16}
}
func (m *QueryAllExtendedPairVaultsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllExtendedPairVaultsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllExtendedPairVaultsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllExtendedPairVaultsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllExtendedPairVaultsRequest.Merge(m, src)
}
func (m *QueryAllExtendedPairVaultsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllExtendedPairVaultsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllExtendedPairVaultsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllExtendedPairVaultsRequest proto.InternalMessageInfo

type QueryAllExtendedPairVaultsResponse struct {
	PairVault  []ExtendedPairVault `protobuf:"bytes,1,rep,name=pairVault,proto3" json:"pairVault" yaml:"pair_vault"`
	Pagination *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryAllExtendedPairVaultsResponse) Reset()         { *m = QueryAllExtendedPairVaultsResponse{} }
func (m *QueryAllExtendedPairVaultsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAllExtendedPairVaultsResponse) ProtoMessage()    {}
func (*QueryAllExtendedPairVaultsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{17}
}
func (m *QueryAllExtendedPairVaultsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllExtendedPairVaultsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllExtendedPairVaultsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllExtendedPairVaultsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllExtendedPairVaultsResponse.Merge(m, src)
}
func (m *QueryAllExtendedPairVaultsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllExtendedPairVaultsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllExtendedPairVaultsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllExtendedPairVaultsResponse proto.InternalMessageInfo

type QueryAllExtendedPairVaultsByAppRequest struct {
	AppId      uint64             `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty" yaml:"app_id"`
	Pagination *query.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryAllExtendedPairVaultsByAppRequest) Reset() {
	*m = QueryAllExtendedPairVaultsByAppRequest{}
}
func (m *QueryAllExtendedPairVaultsByAppRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAllExtendedPairVaultsByAppRequest) ProtoMessage()    {}
func (*QueryAllExtendedPairVaultsByAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{18}
}
func (m *QueryAllExtendedPairVaultsByAppRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllExtendedPairVaultsByAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllExtendedPairVaultsByAppRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllExtendedPairVaultsByAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllExtendedPairVaultsByAppRequest.Merge(m, src)
}
func (m *QueryAllExtendedPairVaultsByAppRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllExtendedPairVaultsByAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllExtendedPairVaultsByAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllExtendedPairVaultsByAppRequest proto.InternalMessageInfo

type QueryAllExtendedPairVaultsByAppResponse struct {
	ExtendedPair []ExtendedPairVault `protobuf:"bytes,1,rep,name=extended_pair,json=extendedPair,proto3" json:"extended_pair" yaml:"extended_pair"`
	Pagination   *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryAllExtendedPairVaultsByAppResponse) Reset() {
	*m = QueryAllExtendedPairVaultsByAppResponse{}
}
func (m *QueryAllExtendedPairVaultsByAppResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAllExtendedPairVaultsByAppResponse) ProtoMessage()    {}
func (*QueryAllExtendedPairVaultsByAppResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{19}
}
func (m *QueryAllExtendedPairVaultsByAppResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllExtendedPairVaultsByAppResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllExtendedPairVaultsByAppResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllExtendedPairVaultsByAppResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllExtendedPairVaultsByAppResponse.Merge(m, src)
}
func (m *QueryAllExtendedPairVaultsByAppResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllExtendedPairVaultsByAppResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllExtendedPairVaultsByAppResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllExtendedPairVaultsByAppResponse proto.InternalMessageInfo

type QueryAllExtendedPairStableVaultsIDByAppRequest struct {
	AppId      uint64             `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty" yaml:"app_id"`
	Pagination *query.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryAllExtendedPairStableVaultsIDByAppRequest) Reset() {
	*m = QueryAllExtendedPairStableVaultsIDByAppRequest{}
}
func (m *QueryAllExtendedPairStableVaultsIDByAppRequest) String() string {
	return proto.CompactTextString(m)
}
func (*QueryAllExtendedPairStableVaultsIDByAppRequest) ProtoMessage() {}
func (*QueryAllExtendedPairStableVaultsIDByAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{20}
}
func (m *QueryAllExtendedPairStableVaultsIDByAppRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllExtendedPairStableVaultsIDByAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllExtendedPairStableVaultsIDByAppRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllExtendedPairStableVaultsIDByAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllExtendedPairStableVaultsIDByAppRequest.Merge(m, src)
}
func (m *QueryAllExtendedPairStableVaultsIDByAppRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllExtendedPairStableVaultsIDByAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllExtendedPairStableVaultsIDByAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllExtendedPairStableVaultsIDByAppRequest proto.InternalMessageInfo

type QueryAllExtendedPairStableVaultsIDByAppResponse struct {
	ExtendedPairsId []uint64            `protobuf:"varint,1,rep,packed,name=extended_pairs_id,json=extendedPairsId,proto3" json:"extended_pairs_id,omitempty" yaml:"extended_pairs_id"`
	Pagination      *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryAllExtendedPairStableVaultsIDByAppResponse) Reset() {
	*m = QueryAllExtendedPairStableVaultsIDByAppResponse{}
}
func (m *QueryAllExtendedPairStableVaultsIDByAppResponse) String() string {
	return proto.CompactTextString(m)
}
func (*QueryAllExtendedPairStableVaultsIDByAppResponse) ProtoMessage() {}
func (*QueryAllExtendedPairStableVaultsIDByAppResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{21}
}
func (m *QueryAllExtendedPairStableVaultsIDByAppResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllExtendedPairStableVaultsIDByAppResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllExtendedPairStableVaultsIDByAppResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllExtendedPairStableVaultsIDByAppResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllExtendedPairStableVaultsIDByAppResponse.Merge(m, src)
}
func (m *QueryAllExtendedPairStableVaultsIDByAppResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllExtendedPairStableVaultsIDByAppResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllExtendedPairStableVaultsIDByAppResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllExtendedPairStableVaultsIDByAppResponse proto.InternalMessageInfo

type QueryAllExtendedPairStableVaultsByAppRequest struct {
	AppId      uint64             `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty" yaml:"app_id"`
	Pagination *query.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryAllExtendedPairStableVaultsByAppRequest) Reset() {
	*m = QueryAllExtendedPairStableVaultsByAppRequest{}
}
func (m *QueryAllExtendedPairStableVaultsByAppRequest) String() string {
	return proto.CompactTextString(m)
}
func (*QueryAllExtendedPairStableVaultsByAppRequest) ProtoMessage() {}
func (*QueryAllExtendedPairStableVaultsByAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{22}
}
func (m *QueryAllExtendedPairStableVaultsByAppRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllExtendedPairStableVaultsByAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllExtendedPairStableVaultsByAppRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllExtendedPairStableVaultsByAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllExtendedPairStableVaultsByAppRequest.Merge(m, src)
}
func (m *QueryAllExtendedPairStableVaultsByAppRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllExtendedPairStableVaultsByAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllExtendedPairStableVaultsByAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllExtendedPairStableVaultsByAppRequest proto.InternalMessageInfo

type QueryAllExtendedPairStableVaultsByAppResponse struct {
	ExtendedPair []ExtendedPairVault `protobuf:"bytes,1,rep,name=extended_pair,json=extendedPair,proto3" json:"extended_pair" yaml:"extended_pair"`
	Pagination   *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryAllExtendedPairStableVaultsByAppResponse) Reset() {
	*m = QueryAllExtendedPairStableVaultsByAppResponse{}
}
func (m *QueryAllExtendedPairStableVaultsByAppResponse) String() string {
	return proto.CompactTextString(m)
}
func (*QueryAllExtendedPairStableVaultsByAppResponse) ProtoMessage() {}
func (*QueryAllExtendedPairStableVaultsByAppResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{23}
}
func (m *QueryAllExtendedPairStableVaultsByAppResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllExtendedPairStableVaultsByAppResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllExtendedPairStableVaultsByAppResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllExtendedPairStableVaultsByAppResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllExtendedPairStableVaultsByAppResponse.Merge(m, src)
}
func (m *QueryAllExtendedPairStableVaultsByAppResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllExtendedPairStableVaultsByAppResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllExtendedPairStableVaultsByAppResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllExtendedPairStableVaultsByAppResponse proto.InternalMessageInfo

type QueryExtendedPairVaultsByAppWithoutStableRequest struct {
	AppId      uint64             `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty" yaml:"app_id"`
	Pagination *query.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryExtendedPairVaultsByAppWithoutStableRequest) Reset() {
	*m = QueryExtendedPairVaultsByAppWithoutStableRequest{}
}
func (m *QueryExtendedPairVaultsByAppWithoutStableRequest) String() string {
	return proto.CompactTextString(m)
}
func (*QueryExtendedPairVaultsByAppWithoutStableRequest) ProtoMessage() {}
func (*QueryExtendedPairVaultsByAppWithoutStableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{24}
}
func (m *QueryExtendedPairVaultsByAppWithoutStableRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryExtendedPairVaultsByAppWithoutStableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryExtendedPairVaultsByAppWithoutStableRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryExtendedPairVaultsByAppWithoutStableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryExtendedPairVaultsByAppWithoutStableRequest.Merge(m, src)
}
func (m *QueryExtendedPairVaultsByAppWithoutStableRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryExtendedPairVaultsByAppWithoutStableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryExtendedPairVaultsByAppWithoutStableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryExtendedPairVaultsByAppWithoutStableRequest proto.InternalMessageInfo

type QueryExtendedPairVaultsByAppWithoutStableResponse struct {
	ExtendedPair []ExtendedPairVault `protobuf:"bytes,1,rep,name=extended_pair,json=extendedPair,proto3" json:"extended_pair" yaml:"extended_pair"`
	Pagination   *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" yaml:"pagination"`
}

func (m *QueryExtendedPairVaultsByAppWithoutStableResponse) Reset() {
	*m = QueryExtendedPairVaultsByAppWithoutStableResponse{}
}
func (m *QueryExtendedPairVaultsByAppWithoutStableResponse) String() string {
	return proto.CompactTextString(m)
}
func (*QueryExtendedPairVaultsByAppWithoutStableResponse) ProtoMessage() {}
func (*QueryExtendedPairVaultsByAppWithoutStableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e7e9ce3abb4febf, []int{25}
}
func (m *QueryExtendedPairVaultsByAppWithoutStableResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryExtendedPairVaultsByAppWithoutStableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryExtendedPairVaultsByAppWithoutStableResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryExtendedPairVaultsByAppWithoutStableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryExtendedPairVaultsByAppWithoutStableResponse.Merge(m, src)
}
func (m *QueryExtendedPairVaultsByAppWithoutStableResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryExtendedPairVaultsByAppWithoutStableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryExtendedPairVaultsByAppWithoutStableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryExtendedPairVaultsByAppWithoutStableResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*QueryAssetsRequest)(nil), "comdex.asset.v1beta1.QueryAssetsRequest")
	proto.RegisterType((*QueryAssetsResponse)(nil), "comdex.asset.v1beta1.QueryAssetsResponse")
	proto.RegisterType((*QueryAssetRequest)(nil), "comdex.asset.v1beta1.QueryAssetRequest")
	proto.RegisterType((*QueryAssetResponse)(nil), "comdex.asset.v1beta1.QueryAssetResponse")
	proto.RegisterType((*QueryAssetPairsRequest)(nil), "comdex.asset.v1beta1.QueryAssetPairsRequest")
	proto.RegisterType((*QueryAssetPairsResponse)(nil), "comdex.asset.v1beta1.QueryAssetPairsResponse")
	proto.RegisterType((*QueryAssetPairRequest)(nil), "comdex.asset.v1beta1.QueryAssetPairRequest")
	proto.RegisterType((*QueryAssetPairResponse)(nil), "comdex.asset.v1beta1.QueryAssetPairResponse")
	proto.RegisterType((*QueryAppRequest)(nil), "comdex.asset.v1beta1.QueryAppRequest")
	proto.RegisterType((*QueryAppResponse)(nil), "comdex.asset.v1beta1.QueryAppResponse")
	proto.RegisterType((*QueryGovTokenByAppRequest)(nil), "comdex.asset.v1beta1.QueryGovTokenByAppRequest")
	proto.RegisterType((*QueryGovTokenByAppResponse)(nil), "comdex.asset.v1beta1.QueryGovTokenByAppResponse")
	proto.RegisterType((*QueryAppsRequest)(nil), "comdex.asset.v1beta1.QueryAppsRequest")
	proto.RegisterType((*QueryAppsResponse)(nil), "comdex.asset.v1beta1.QueryAppsResponse")
	proto.RegisterType((*QueryExtendedPairVaultRequest)(nil), "comdex.asset.v1beta1.QueryExtendedPairVaultRequest")
	proto.RegisterType((*QueryExtendedPairVaultResponse)(nil), "comdex.asset.v1beta1.QueryExtendedPairVaultResponse")
	proto.RegisterType((*QueryAllExtendedPairVaultsRequest)(nil), "comdex.asset.v1beta1.QueryAllExtendedPairVaultsRequest")
	proto.RegisterType((*QueryAllExtendedPairVaultsResponse)(nil), "comdex.asset.v1beta1.QueryAllExtendedPairVaultsResponse")
	proto.RegisterType((*QueryAllExtendedPairVaultsByAppRequest)(nil), "comdex.asset.v1beta1.QueryAllExtendedPairVaultsByAppRequest")
	proto.RegisterType((*QueryAllExtendedPairVaultsByAppResponse)(nil), "comdex.asset.v1beta1.QueryAllExtendedPairVaultsByAppResponse")
	proto.RegisterType((*QueryAllExtendedPairStableVaultsIDByAppRequest)(nil), "comdex.asset.v1beta1.QueryAllExtendedPairStableVaultsIDByAppRequest")
	proto.RegisterType((*QueryAllExtendedPairStableVaultsIDByAppResponse)(nil), "comdex.asset.v1beta1.QueryAllExtendedPairStableVaultsIDByAppResponse")
	proto.RegisterType((*QueryAllExtendedPairStableVaultsByAppRequest)(nil), "comdex.asset.v1beta1.QueryAllExtendedPairStableVaultsByAppRequest")
	proto.RegisterType((*QueryAllExtendedPairStableVaultsByAppResponse)(nil), "comdex.asset.v1beta1.QueryAllExtendedPairStableVaultsByAppResponse")
	proto.RegisterType((*QueryExtendedPairVaultsByAppWithoutStableRequest)(nil), "comdex.asset.v1beta1.QueryExtendedPairVaultsByAppWithoutStableRequest")
	proto.RegisterType((*QueryExtendedPairVaultsByAppWithoutStableResponse)(nil), "comdex.asset.v1beta1.QueryExtendedPairVaultsByAppWithoutStableResponse")
}

func init() { proto.RegisterFile("comdex/asset/v1beta1/query.proto", fileDescriptor_9e7e9ce3abb4febf) }

var fileDescriptor_9e7e9ce3abb4febf = []byte{
	// 1345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x59, 0xdb, 0x4f, 0x1c, 0xd5,
	0x1f, 0xdf, 0xb3, 0xb4, 0x4d, 0x7b, 0xa0, 0x17, 0x0e, 0xf0, 0x2b, 0x9d, 0xc2, 0x2c, 0x0c, 0xbf,
	0xb2, 0x4b, 0x85, 0x1d, 0xa0, 0x8d, 0xb5, 0x8d, 0xd7, 0x2d, 0x17, 0x31, 0x31, 0xb6, 0x6b, 0x95,
	0xc4, 0xa4, 0x8e, 0x03, 0x3b, 0x6c, 0x47, 0x97, 0x99, 0xc3, 0x9e, 0xd9, 0xa5, 0xa4, 0x69, 0xa2,
	0x3c, 0x19, 0x9f, 0x4c, 0x88, 0xff, 0x83, 0xaf, 0xc6, 0x07, 0x63, 0x78, 0x32, 0xbe, 0xf0, 0xd8,
	0xe8, 0x8b, 0x89, 0x09, 0x2a, 0x18, 0xff, 0x00, 0x12, 0x13, 0x13, 0x13, 0x35, 0x73, 0xce, 0x77,
	0x76, 0x76, 0x61, 0x66, 0x77, 0x16, 0x0a, 0x21, 0x7d, 0x23, 0x3b, 0xdf, 0xcb, 0xe7, 0x72, 0xce,
	0xcc, 0xf7, 0x1c, 0x70, 0xdf, 0xbc, 0xbd, 0x98, 0x33, 0x1e, 0xaa, 0x3a, 0x63, 0x86, 0xa3, 0x96,
	0xc7, 0xe6, 0x0c, 0x47, 0x1f, 0x53, 0x97, 0x4a, 0x46, 0x71, 0x25, 0x4d, 0x8b, 0xb6, 0x63, 0x93,
	0x4e, 0x11, 0x91, 0xe6, 0x11, 0x69, 0x88, 0x90, 0xae, 0xce, 0xdb, 0x6c, 0xd1, 0x66, 0xea, 0x9c,
	0xce, 0x0c, 0x11, 0x5e, 0x49, 0xa6, 0x7a, 0xde, 0xb4, 0x74, 0xc7, 0xb4, 0x2d, 0x51, 0x41, 0xea,
	0xcc, 0xdb, 0x79, 0x9b, 0xff, 0xa9, 0xba, 0x7f, 0xc1, 0xaf, 0x3d, 0x79, 0xdb, 0xce, 0x17, 0x0c,
	0x55, 0xa7, 0xa6, 0xaa, 0x5b, 0x96, 0xed, 0xf0, 0x14, 0x06, 0x4f, 0x83, 0x71, 0x09, 0x0c, 0x22,
	0x42, 0x0e, 0x8e, 0xa0, 0x14, 0x9e, 0x27, 0x02, 0x9f, 0x53, 0xdd, 0x2c, 0x42, 0xc0, 0x70, 0x60,
	0x80, 0xf1, 0xd0, 0x31, 0xac, 0x9c, 0x91, 0xbb, 0xa3, 0x9b, 0xc5, 0x77, 0xf5, 0x52, 0x01, 0xda,
	0x29, 0x0c, 0x93, 0xbb, 0x2e, 0xcd, 0xd7, 0xdc, 0x68, 0x96, 0x35, 0x96, 0x4a, 0x06, 0x73, 0xc8,
	0x7d, 0x8c, 0x7d, 0xba, 0xdd, 0xa8, 0x0f, 0xa5, 0x5a, 0xc7, 0x07, 0xd3, 0x42, 0x9b, 0xb4, 0xab,
	0x4d, 0x5a, 0x48, 0x09, 0xd5, 0xd3, 0x77, 0xf4, 0xbc, 0x01, 0xb9, 0x99, 0xae, 0x9d, 0xcd, 0x44,
	0xfb, 0x8a, 0xbe, 0x58, 0xb8, 0xa5, 0xf8, 0x35, 0x94, 0x6c, 0x55, 0x41, 0xe5, 0x3b, 0x84, 0x3b,
	0x6a, 0xba, 0x32, 0x6a, 0x5b, 0xcc, 0x20, 0x6f, 0xe0, 0x53, 0x1c, 0x35, 0xeb, 0x46, 0x7d, 0x2d,
	0xa9, 0xd6, 0xf1, 0xcb, 0xe9, 0x20, 0x93, 0xd2, 0x3c, 0x2b, 0xd3, 0xb5, 0xb1, 0x99, 0x88, 0xed,
	0x6c, 0x26, 0xce, 0x8a, 0x5e, 0x22, 0x51, 0xc9, 0x42, 0x05, 0xf2, 0x7e, 0x0d, 0x85, 0x38, 0xa7,
	0x90, 0x6c, 0x48, 0x41, 0x00, 0x89, 0xc2, 0x61, 0x00, 0xb7, 0xfb, 0x14, 0x3c, 0xdd, 0xce, 0xe1,
	0xb8, 0x99, 0xe3, 0x7a, 0x9d, 0xc8, 0xc6, 0xcd, 0x9c, 0x72, 0xbf, 0x5a, 0xdd, 0x0a, 0xcd, 0x69,
	0x7c, 0x92, 0x83, 0x04, 0x61, 0xeb, 0xb2, 0xec, 0x04, 0x96, 0x6d, 0x55, 0x2c, 0x95, 0xac, 0xc8,
	0x57, 0x96, 0xf1, 0xff, 0xfc, 0xf2, 0xae, 0xb3, 0x47, 0x65, 0xe0, 0x0f, 0x08, 0x5f, 0xdc, 0xd3,
	0x19, 0xd8, 0xcd, 0xe2, 0x33, 0xee, 0x6a, 0x64, 0x33, 0xd6, 0x82, 0x0d, 0x3e, 0xca, 0xc1, 0x0c,
	0xdd, 0x3c, 0x37, 0x2a, 0x73, 0x09, 0x48, 0x56, 0xba, 0x9a, 0x45, 0xa6, 0x99, 0xd6, 0x82, 0xad,
	0x64, 0xfd, 0x5a, 0x87, 0xee, 0x68, 0x12, 0x77, 0xd5, 0x72, 0x0a, 0x73, 0xd5, 0xda, 0x2d, 0x7b,
	0x85, 0xfb, 0x3d, 0x7c, 0x9a, 0x02, 0x29, 0x10, 0xbd, 0x11, 0xf5, 0x6e, 0xa0, 0x7e, 0xc1, 0xa7,
	0x0e, 0xcc, 0x2b, 0x95, 0x94, 0x7e, 0x7c, 0x5e, 0xf4, 0xa3, 0x34, 0x0c, 0xd2, 0x2c, 0xbe, 0xe0,
	0x87, 0x00, 0x98, 0xdb, 0xb8, 0x45, 0xa7, 0x14, 0x70, 0xf4, 0x86, 0x2c, 0x32, 0x4a, 0x27, 0x74,
	0x47, 0xcf, 0x10, 0x80, 0x81, 0x61, 0x99, 0x51, 0xaa, 0x64, 0xdd, 0x6c, 0x65, 0x12, 0x5f, 0xe2,
	0x85, 0xa7, 0xed, 0xf2, 0x3d, 0xfb, 0x23, 0xc3, 0xca, 0x54, 0xa3, 0x48, 0xe1, 0x53, 0x3a, 0xa5,
	0x9a, 0x87, 0x24, 0xd3, 0x5e, 0xb5, 0x1d, 0xf9, 0xef, 0xee, 0x4a, 0xa5, 0x74, 0xc6, 0xc5, 0x27,
	0x05, 0x95, 0x01, 0xa4, 0x37, 0x71, 0x5b, 0xde, 0x2e, 0x6b, 0x1c, 0x9a, 0x5f, 0xed, 0xe2, 0xce,
	0x66, 0xa2, 0x43, 0x54, 0xab, 0x7e, 0xaa, 0x64, 0x71, 0xde, 0x2e, 0x73, 0xed, 0x67, 0x72, 0xca,
	0x92, 0x4f, 0xfc, 0xa8, 0x16, 0xff, 0x3a, 0xf2, 0xb6, 0x3e, 0xef, 0x09, 0x1c, 0xa6, 0xf0, 0x09,
	0x9d, 0x52, 0xef, 0xcd, 0xd5, 0x40, 0xee, 0x0e, 0x90, 0xbb, 0xb5, 0x22, 0x16, 0x53, 0xb2, 0x3c,
	0xff, 0xd0, 0x57, 0xb9, 0x8a, 0x7b, 0x39, 0xf8, 0xc9, 0xdd, 0x1f, 0x84, 0xb0, 0xa5, 0xb5, 0x8a,
	0xb0, 0x1c, 0x96, 0x01, 0xdc, 0x3f, 0x10, 0x5b, 0x9e, 0xff, 0x08, 0x7a, 0x27, 0x83, 0x05, 0xd8,
	0x53, 0x23, 0x68, 0xef, 0x6b, 0x65, 0xf7, 0x09, 0xec, 0x7d, 0x1e, 0xe5, 0x82, 0xe8, 0x17, 0x9a,
	0x17, 0x0a, 0x7b, 0x6a, 0x1c, 0x95, 0xf1, 0x7f, 0x20, 0xac, 0xd4, 0x03, 0x11, 0xac, 0x46, 0xcb,
	0x53, 0x57, 0xe3, 0xd0, 0xd7, 0xc8, 0x57, 0x08, 0x0f, 0x86, 0x13, 0xdd, 0xdf, 0x2b, 0x60, 0x97,
	0x39, 0xf1, 0xa7, 0x6d, 0xce, 0x9f, 0x08, 0x27, 0x1b, 0x62, 0x06, 0x87, 0x3e, 0xc4, 0x67, 0xbd,
	0x79, 0x48, 0x73, 0x55, 0x6d, 0xd6, 0xa5, 0x1e, 0x70, 0xa9, 0x53, 0x40, 0xaa, 0xa9, 0xa5, 0x64,
	0xdb, 0xaa, 0x67, 0xad, 0x43, 0xf7, 0xea, 0x5b, 0x84, 0xd3, 0x41, 0xbc, 0xdf, 0x76, 0xf4, 0xb9,
	0x82, 0x21, 0xd8, 0xcf, 0x4c, 0x1c, 0x4f, 0xcf, 0x7e, 0x46, 0x58, 0x8d, 0x8c, 0x1d, 0xbc, 0x7b,
	0x1d, 0xb7, 0xd7, 0xe8, 0xcd, 0x04, 0x8f, 0x96, 0xd4, 0x89, 0x4c, 0xcf, 0xce, 0x66, 0xa2, 0x3b,
	0xc0, 0x12, 0xc6, 0x29, 0x9d, 0xaf, 0xb6, 0x85, 0xcd, 0xe4, 0x0e, 0xdd, 0x99, 0x6f, 0x10, 0x1e,
	0x6e, 0xc4, 0xee, 0x78, 0xfa, 0xf2, 0x37, 0xc2, 0x23, 0x11, 0x91, 0x3f, 0x83, 0x3b, 0x6a, 0x1d,
	0xe1, 0xd1, 0xe0, 0x0f, 0x9e, 0x20, 0x3d, 0x6b, 0x3a, 0x0f, 0xec, 0x92, 0x23, 0xc4, 0x38, 0x76,
	0xde, 0xfd, 0x8b, 0xf0, 0x58, 0x13, 0xe8, 0x9f, 0x3d, 0xff, 0xc6, 0x57, 0x3b, 0xf0, 0x49, 0xae,
	0x00, 0xf9, 0x14, 0xe1, 0xd6, 0xaa, 0x73, 0x26, 0x49, 0x05, 0xd3, 0xd9, 0x7b, 0x00, 0x96, 0x86,
	0x22, 0x44, 0x0a, 0x44, 0xca, 0xff, 0x57, 0x7f, 0xfc, 0x7d, 0x2d, 0x2e, 0x93, 0x1e, 0x35, 0xfc,
	0x6c, 0xcf, 0xc8, 0x67, 0x08, 0x63, 0x3f, 0x9b, 0x24, 0x1b, 0xd5, 0xf7, 0x80, 0xa4, 0x1a, 0x07,
	0x02, 0x8e, 0x21, 0x8e, 0x63, 0x80, 0xf4, 0xd7, 0xc3, 0xa1, 0x3e, 0x32, 0x73, 0x8f, 0xc9, 0x1a,
	0xf2, 0x4e, 0x14, 0x95, 0xe3, 0x1b, 0x19, 0x6e, 0xd4, 0xa8, 0xfa, 0x7c, 0x29, 0x8d, 0x44, 0x8c,
	0x06, 0x6c, 0x03, 0x1c, 0x5b, 0x2f, 0xb9, 0xac, 0x86, 0xde, 0x5e, 0x30, 0xf2, 0x05, 0xc2, 0xe7,
	0x6a, 0x0b, 0x90, 0xe7, 0xa2, 0xb4, 0xf1, 0x30, 0x0d, 0x47, 0x0b, 0x06, 0x48, 0x29, 0x0e, 0x49,
	0x21, 0x7d, 0x75, 0x20, 0x09, 0xb5, 0x3e, 0x46, 0xf8, 0x4c, 0x65, 0xde, 0x27, 0x83, 0xf5, 0xba,
	0xf8, 0x87, 0x10, 0x29, 0xd9, 0x30, 0x0e, 0x80, 0x28, 0x1c, 0x48, 0x0f, 0x91, 0xd4, 0xb0, 0x9b,
	0x1f, 0x46, 0x3e, 0x41, 0xf8, 0xb4, 0x97, 0x49, 0xae, 0xd4, 0xaf, 0xec, 0x01, 0x18, 0x6c, 0x14,
	0x06, 0xfd, 0x07, 0x79, 0xff, 0x3e, 0x22, 0x87, 0xf6, 0x17, 0x32, 0xac, 0x23, 0x38, 0xf6, 0xee,
	0xd9, 0xfd, 0xe4, 0x5a, 0x9d, 0x56, 0x61, 0xe7, 0x0c, 0xe9, 0x7a, 0x73, 0x49, 0x80, 0xf6, 0x79,
	0x8e, 0x76, 0x94, 0xa4, 0xd5, 0xba, 0xd7, 0x5c, 0x9a, 0x3f, 0x39, 0x0b, 0xf4, 0xdf, 0x23, 0x38,
	0x81, 0x06, 0x8e, 0x87, 0xe4, 0x46, 0x3d, 0xb1, 0xea, 0x1c, 0x39, 0xa4, 0x17, 0x9a, 0x4f, 0x04,
	0x26, 0xe3, 0x9c, 0xc9, 0x30, 0xb9, 0x1a, 0x99, 0x09, 0x23, 0xbf, 0x20, 0x9c, 0x68, 0x30, 0xe4,
	0x92, 0x17, 0x9b, 0x45, 0x54, 0x3d, 0x83, 0x48, 0x2f, 0xed, 0x33, 0x1b, 0x48, 0xbd, 0xc2, 0x49,
	0xdd, 0x24, 0x37, 0x42, 0x76, 0x55, 0xd1, 0xce, 0x95, 0xe6, 0x1d, 0xcd, 0xb1, 0xb5, 0x1a, 0x7e,
	0xea, 0x23, 0xf1, 0x91, 0x7c, 0x4c, 0xfe, 0x09, 0x19, 0xe3, 0x03, 0x46, 0x42, 0x32, 0x11, 0x1d,
	0x6b, 0xf8, 0x34, 0x2c, 0x4d, 0x1e, 0xb0, 0x0a, 0x30, 0x9f, 0xe2, 0xcc, 0x5f, 0x25, 0x2f, 0x47,
	0xb1, 0x93, 0xf1, 0x42, 0xc2, 0x55, 0x6d, 0xd9, 0x64, 0x86, 0x2f, 0xc0, 0xd7, 0x08, 0xee, 0x0c,
	0x6b, 0xae, 0x4a, 0x88, 0x5a, 0x07, 0x65, 0xd0, 0xdd, 0x8c, 0x34, 0x1a, 0x3d, 0x01, 0x18, 0xdc,
	0xe2, 0x0c, 0xae, 0x93, 0xf1, 0x60, 0x06, 0x79, 0xbb, 0xac, 0x39, 0x6e, 0x96, 0x66, 0x5a, 0x9a,
	0x6e, 0x69, 0xfc, 0xc5, 0xe0, 0xa1, 0xfe, 0x0b, 0xe1, 0x2b, 0x91, 0x26, 0x46, 0x92, 0xd9, 0x9f,
	0xdc, 0x35, 0xdc, 0x6e, 0x1f, 0xa8, 0xc6, 0x81, 0x0d, 0xcb, 0xe9, 0x8e, 0xee, 0x53, 0x5f, 0x8b,
	0xe3, 0xa1, 0xc8, 0x03, 0x17, 0x99, 0x6a, 0xe6, 0xad, 0x17, 0x3e, 0x6f, 0x4a, 0xd3, 0x07, 0xae,
	0x03, 0x32, 0xbc, 0xc3, 0x65, 0x78, 0x8b, 0xbc, 0xb9, 0x2f, 0x19, 0xb4, 0x65, 0x51, 0x14, 0x9e,
	0x54, 0x54, 0xc9, 0xdc, 0xdd, 0xf8, 0x4d, 0x8e, 0x7d, 0xb9, 0x25, 0xc7, 0x36, 0xb6, 0x64, 0xf4,
	0x64, 0x4b, 0x46, 0xbf, 0x6e, 0xc9, 0xe8, 0xf3, 0x6d, 0x39, 0xf6, 0x64, 0x5b, 0x8e, 0xfd, 0xb4,
	0x2d, 0xc7, 0xde, 0x53, 0xf3, 0xa6, 0xf3, 0xa0, 0x34, 0xe7, 0xf2, 0x80, 0xd6, 0x23, 0xf6, 0xc2,
	0x82, 0x39, 0x6f, 0xea, 0x05, 0x0f, 0x8a, 0x07, 0xc6, 0x59, 0xa1, 0x06, 0x9b, 0x3b, 0xc5, 0xff,
	0x63, 0x71, 0xed, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5d, 0x37, 0x25, 0x4f, 0xdc, 0x19, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	QueryAssets(ctx context.Context, in *QueryAssetsRequest, opts ...grpc.CallOption) (*QueryAssetsResponse, error)
	QueryAsset(ctx context.Context, in *QueryAssetRequest, opts ...grpc.CallOption) (*QueryAssetResponse, error)
	QueryAssetPairs(ctx context.Context, in *QueryAssetPairsRequest, opts ...grpc.CallOption) (*QueryAssetPairsResponse, error)
	QueryAssetPair(ctx context.Context, in *QueryAssetPairRequest, opts ...grpc.CallOption) (*QueryAssetPairResponse, error)
	QueryApps(ctx context.Context, in *QueryAppsRequest, opts ...grpc.CallOption) (*QueryAppsResponse, error)
	QueryApp(ctx context.Context, in *QueryAppRequest, opts ...grpc.CallOption) (*QueryAppResponse, error)
	QueryExtendedPairVault(ctx context.Context, in *QueryExtendedPairVaultRequest, opts ...grpc.CallOption) (*QueryExtendedPairVaultResponse, error)
	QueryAllExtendedPairVaults(ctx context.Context, in *QueryAllExtendedPairVaultsRequest, opts ...grpc.CallOption) (*QueryAllExtendedPairVaultsResponse, error)
	QueryAllExtendedPairVaultsByApp(ctx context.Context, in *QueryAllExtendedPairVaultsByAppRequest, opts ...grpc.CallOption) (*QueryAllExtendedPairVaultsByAppResponse, error)
	QueryAllExtendedPairStableVaultsIDByApp(ctx context.Context, in *QueryAllExtendedPairStableVaultsIDByAppRequest, opts ...grpc.CallOption) (*QueryAllExtendedPairStableVaultsIDByAppResponse, error)
	QueryGovTokenByApp(ctx context.Context, in *QueryGovTokenByAppRequest, opts ...grpc.CallOption) (*QueryGovTokenByAppResponse, error)
	QueryAllExtendedPairStableVaultsByApp(ctx context.Context, in *QueryAllExtendedPairStableVaultsByAppRequest, opts ...grpc.CallOption) (*QueryAllExtendedPairStableVaultsByAppResponse, error)
	QueryExtendedPairVaultsByAppWithoutStable(ctx context.Context, in *QueryExtendedPairVaultsByAppWithoutStableRequest, opts ...grpc.CallOption) (*QueryExtendedPairVaultsByAppWithoutStableResponse, error)
}

type queryClient struct {
	cc grpc1.ClientConn
}

func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) QueryAssets(ctx context.Context, in *QueryAssetsRequest, opts ...grpc.CallOption) (*QueryAssetsResponse, error) {
	out := new(QueryAssetsResponse)
	err := c.cc.Invoke(ctx, "/comdex.asset.v1beta1.Query/QueryAssets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryAsset(ctx context.Context, in *QueryAssetRequest, opts ...grpc.CallOption) (*QueryAssetResponse, error) {
	out := new(QueryAssetResponse)
	err := c.cc.Invoke(ctx, "/comdex.asset.v1beta1.Query/QueryAsset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryAssetPairs(ctx context.Context, in *QueryAssetPairsRequest, opts ...grpc.CallOption) (*QueryAssetPairsResponse, error) {
	out := new(QueryAssetPairsResponse)
	err := c.cc.Invoke(ctx, "/comdex.asset.v1beta1.Query/QueryAssetPairs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryAssetPair(ctx context.Context, in *QueryAssetPairRequest, opts ...grpc.CallOption) (*QueryAssetPairResponse, error) {
	out := new(QueryAssetPairResponse)
	err := c.cc.Invoke(ctx, "/comdex.asset.v1beta1.Query/QueryAssetPair", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryApps(ctx context.Context, in *QueryAppsRequest, opts ...grpc.CallOption) (*QueryAppsResponse, error) {
	out := new(QueryAppsResponse)
	err := c.cc.Invoke(ctx, "/comdex.asset.v1beta1.Query/QueryApps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryApp(ctx context.Context, in *QueryAppRequest, opts ...grpc.CallOption) (*QueryAppResponse, error) {
	out := new(QueryAppResponse)
	err := c.cc.Invoke(ctx, "/comdex.asset.v1beta1.Query/QueryApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryExtendedPairVault(ctx context.Context, in *QueryExtendedPairVaultRequest, opts ...grpc.CallOption) (*QueryExtendedPairVaultResponse, error) {
	out := new(QueryExtendedPairVaultResponse)
	err := c.cc.Invoke(ctx, "/comdex.asset.v1beta1.Query/QueryExtendedPairVault", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryAllExtendedPairVaults(ctx context.Context, in *QueryAllExtendedPairVaultsRequest, opts ...grpc.CallOption) (*QueryAllExtendedPairVaultsResponse, error) {
	out := new(QueryAllExtendedPairVaultsResponse)
	err := c.cc.Invoke(ctx, "/comdex.asset.v1beta1.Query/QueryAllExtendedPairVaults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryAllExtendedPairVaultsByApp(ctx context.Context, in *QueryAllExtendedPairVaultsByAppRequest, opts ...grpc.CallOption) (*QueryAllExtendedPairVaultsByAppResponse, error) {
	out := new(QueryAllExtendedPairVaultsByAppResponse)
	err := c.cc.Invoke(ctx, "/comdex.asset.v1beta1.Query/QueryAllExtendedPairVaultsByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryAllExtendedPairStableVaultsIDByApp(ctx context.Context, in *QueryAllExtendedPairStableVaultsIDByAppRequest, opts ...grpc.CallOption) (*QueryAllExtendedPairStableVaultsIDByAppResponse, error) {
	out := new(QueryAllExtendedPairStableVaultsIDByAppResponse)
	err := c.cc.Invoke(ctx, "/comdex.asset.v1beta1.Query/QueryAllExtendedPairStableVaultsIDByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryGovTokenByApp(ctx context.Context, in *QueryGovTokenByAppRequest, opts ...grpc.CallOption) (*QueryGovTokenByAppResponse, error) {
	out := new(QueryGovTokenByAppResponse)
	err := c.cc.Invoke(ctx, "/comdex.asset.v1beta1.Query/QueryGovTokenByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryAllExtendedPairStableVaultsByApp(ctx context.Context, in *QueryAllExtendedPairStableVaultsByAppRequest, opts ...grpc.CallOption) (*QueryAllExtendedPairStableVaultsByAppResponse, error) {
	out := new(QueryAllExtendedPairStableVaultsByAppResponse)
	err := c.cc.Invoke(ctx, "/comdex.asset.v1beta1.Query/QueryAllExtendedPairStableVaultsByApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryExtendedPairVaultsByAppWithoutStable(ctx context.Context, in *QueryExtendedPairVaultsByAppWithoutStableRequest, opts ...grpc.CallOption) (*QueryExtendedPairVaultsByAppWithoutStableResponse, error) {
	out := new(QueryExtendedPairVaultsByAppWithoutStableResponse)
	err := c.cc.Invoke(ctx, "/comdex.asset.v1beta1.Query/QueryExtendedPairVaultsByAppWithoutStable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	QueryAssets(context.Context, *QueryAssetsRequest) (*QueryAssetsResponse, error)
	QueryAsset(context.Context, *QueryAssetRequest) (*QueryAssetResponse, error)
	QueryAssetPairs(context.Context, *QueryAssetPairsRequest) (*QueryAssetPairsResponse, error)
	QueryAssetPair(context.Context, *QueryAssetPairRequest) (*QueryAssetPairResponse, error)
	QueryApps(context.Context, *QueryAppsRequest) (*QueryAppsResponse, error)
	QueryApp(context.Context, *QueryAppRequest) (*QueryAppResponse, error)
	QueryExtendedPairVault(context.Context, *QueryExtendedPairVaultRequest) (*QueryExtendedPairVaultResponse, error)
	QueryAllExtendedPairVaults(context.Context, *QueryAllExtendedPairVaultsRequest) (*QueryAllExtendedPairVaultsResponse, error)
	QueryAllExtendedPairVaultsByApp(context.Context, *QueryAllExtendedPairVaultsByAppRequest) (*QueryAllExtendedPairVaultsByAppResponse, error)
	QueryAllExtendedPairStableVaultsIDByApp(context.Context, *QueryAllExtendedPairStableVaultsIDByAppRequest) (*QueryAllExtendedPairStableVaultsIDByAppResponse, error)
	QueryGovTokenByApp(context.Context, *QueryGovTokenByAppRequest) (*QueryGovTokenByAppResponse, error)
	QueryAllExtendedPairStableVaultsByApp(context.Context, *QueryAllExtendedPairStableVaultsByAppRequest) (*QueryAllExtendedPairStableVaultsByAppResponse, error)
	QueryExtendedPairVaultsByAppWithoutStable(context.Context, *QueryExtendedPairVaultsByAppWithoutStableRequest) (*QueryExtendedPairVaultsByAppWithoutStableResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) QueryAssets(ctx context.Context, req *QueryAssetsRequest) (*QueryAssetsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAssets not implemented")
}
func (*UnimplementedQueryServer) QueryAsset(ctx context.Context, req *QueryAssetRequest) (*QueryAssetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAsset not implemented")
}
func (*UnimplementedQueryServer) QueryAssetPairs(ctx context.Context, req *QueryAssetPairsRequest) (*QueryAssetPairsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAssetPairs not implemented")
}
func (*UnimplementedQueryServer) QueryAssetPair(ctx context.Context, req *QueryAssetPairRequest) (*QueryAssetPairResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAssetPair not implemented")
}
func (*UnimplementedQueryServer) QueryApps(ctx context.Context, req *QueryAppsRequest) (*QueryAppsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryApps not implemented")
}
func (*UnimplementedQueryServer) QueryApp(ctx context.Context, req *QueryAppRequest) (*QueryAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryApp not implemented")
}
func (*UnimplementedQueryServer) QueryExtendedPairVault(ctx context.Context, req *QueryExtendedPairVaultRequest) (*QueryExtendedPairVaultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryExtendedPairVault not implemented")
}
func (*UnimplementedQueryServer) QueryAllExtendedPairVaults(ctx context.Context, req *QueryAllExtendedPairVaultsRequest) (*QueryAllExtendedPairVaultsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAllExtendedPairVaults not implemented")
}
func (*UnimplementedQueryServer) QueryAllExtendedPairVaultsByApp(ctx context.Context, req *QueryAllExtendedPairVaultsByAppRequest) (*QueryAllExtendedPairVaultsByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAllExtendedPairVaultsByApp not implemented")
}
func (*UnimplementedQueryServer) QueryAllExtendedPairStableVaultsIDByApp(ctx context.Context, req *QueryAllExtendedPairStableVaultsIDByAppRequest) (*QueryAllExtendedPairStableVaultsIDByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAllExtendedPairStableVaultsIDByApp not implemented")
}
func (*UnimplementedQueryServer) QueryGovTokenByApp(ctx context.Context, req *QueryGovTokenByAppRequest) (*QueryGovTokenByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryGovTokenByApp not implemented")
}
func (*UnimplementedQueryServer) QueryAllExtendedPairStableVaultsByApp(ctx context.Context, req *QueryAllExtendedPairStableVaultsByAppRequest) (*QueryAllExtendedPairStableVaultsByAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAllExtendedPairStableVaultsByApp not implemented")
}
func (*UnimplementedQueryServer) QueryExtendedPairVaultsByAppWithoutStable(ctx context.Context, req *QueryExtendedPairVaultsByAppWithoutStableRequest) (*QueryExtendedPairVaultsByAppWithoutStableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryExtendedPairVaultsByAppWithoutStable not implemented")
}

func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_QueryAssets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAssetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryAssets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.asset.v1beta1.Query/QueryAssets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryAssets(ctx, req.(*QueryAssetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAssetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.asset.v1beta1.Query/QueryAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryAsset(ctx, req.(*QueryAssetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryAssetPairs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAssetPairsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryAssetPairs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.asset.v1beta1.Query/QueryAssetPairs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryAssetPairs(ctx, req.(*QueryAssetPairsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryAssetPair_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAssetPairRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryAssetPair(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.asset.v1beta1.Query/QueryAssetPair",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryAssetPair(ctx, req.(*QueryAssetPairRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryApps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAppsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryApps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.asset.v1beta1.Query/QueryApps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryApps(ctx, req.(*QueryAppsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.asset.v1beta1.Query/QueryApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryApp(ctx, req.(*QueryAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryExtendedPairVault_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryExtendedPairVaultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryExtendedPairVault(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.asset.v1beta1.Query/QueryExtendedPairVault",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryExtendedPairVault(ctx, req.(*QueryExtendedPairVaultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryAllExtendedPairVaults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllExtendedPairVaultsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryAllExtendedPairVaults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.asset.v1beta1.Query/QueryAllExtendedPairVaults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryAllExtendedPairVaults(ctx, req.(*QueryAllExtendedPairVaultsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryAllExtendedPairVaultsByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllExtendedPairVaultsByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryAllExtendedPairVaultsByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.asset.v1beta1.Query/QueryAllExtendedPairVaultsByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryAllExtendedPairVaultsByApp(ctx, req.(*QueryAllExtendedPairVaultsByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryAllExtendedPairStableVaultsIDByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllExtendedPairStableVaultsIDByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryAllExtendedPairStableVaultsIDByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.asset.v1beta1.Query/QueryAllExtendedPairStableVaultsIDByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryAllExtendedPairStableVaultsIDByApp(ctx, req.(*QueryAllExtendedPairStableVaultsIDByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryGovTokenByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGovTokenByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryGovTokenByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.asset.v1beta1.Query/QueryGovTokenByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryGovTokenByApp(ctx, req.(*QueryGovTokenByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryAllExtendedPairStableVaultsByApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllExtendedPairStableVaultsByAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryAllExtendedPairStableVaultsByApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.asset.v1beta1.Query/QueryAllExtendedPairStableVaultsByApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryAllExtendedPairStableVaultsByApp(ctx, req.(*QueryAllExtendedPairStableVaultsByAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryExtendedPairVaultsByAppWithoutStable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryExtendedPairVaultsByAppWithoutStableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryExtendedPairVaultsByAppWithoutStable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.asset.v1beta1.Query/QueryExtendedPairVaultsByAppWithoutStable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryExtendedPairVaultsByAppWithoutStable(ctx, req.(*QueryExtendedPairVaultsByAppWithoutStableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "comdex.asset.v1beta1.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryAssets",
			Handler:    _Query_QueryAssets_Handler,
		},
		{
			MethodName: "QueryAsset",
			Handler:    _Query_QueryAsset_Handler,
		},
		{
			MethodName: "QueryAssetPairs",
			Handler:    _Query_QueryAssetPairs_Handler,
		},
		{
			MethodName: "QueryAssetPair",
			Handler:    _Query_QueryAssetPair_Handler,
		},
		{
			MethodName: "QueryApps",
			Handler:    _Query_QueryApps_Handler,
		},
		{
			MethodName: "QueryApp",
			Handler:    _Query_QueryApp_Handler,
		},
		{
			MethodName: "QueryExtendedPairVault",
			Handler:    _Query_QueryExtendedPairVault_Handler,
		},
		{
			MethodName: "QueryAllExtendedPairVaults",
			Handler:    _Query_QueryAllExtendedPairVaults_Handler,
		},
		{
			MethodName: "QueryAllExtendedPairVaultsByApp",
			Handler:    _Query_QueryAllExtendedPairVaultsByApp_Handler,
		},
		{
			MethodName: "QueryAllExtendedPairStableVaultsIDByApp",
			Handler:    _Query_QueryAllExtendedPairStableVaultsIDByApp_Handler,
		},
		{
			MethodName: "QueryGovTokenByApp",
			Handler:    _Query_QueryGovTokenByApp_Handler,
		},
		{
			MethodName: "QueryAllExtendedPairStableVaultsByApp",
			Handler:    _Query_QueryAllExtendedPairStableVaultsByApp_Handler,
		},
		{
			MethodName: "QueryExtendedPairVaultsByAppWithoutStable",
			Handler:    _Query_QueryExtendedPairVaultsByAppWithoutStable_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "comdex/asset/v1beta1/query.proto",
}

func (m *QueryAssetsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAssetsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAssetsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAssetsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAssetsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAssetsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Assets) > 0 {
		for iNdEx := len(m.Assets) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Assets[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryAssetRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAssetRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAssetRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryAssetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAssetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAssetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Asset.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryAssetPairsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAssetPairsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAssetPairsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAssetPairsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAssetPairsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAssetPairsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.PairsInfo) > 0 {
		for iNdEx := len(m.PairsInfo) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PairsInfo[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryAssetPairRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAssetPairRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAssetPairRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryAssetPairResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAssetPairResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAssetPairResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.PairInfo.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryAppRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAppRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAppRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryAppResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAppResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAppResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.App.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryGovTokenByAppRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGovTokenByAppRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGovTokenByAppRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AppId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.AppId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryGovTokenByAppResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGovTokenByAppResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGovTokenByAppResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.GovAssetId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.GovAssetId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryAppsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAppsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAppsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAppsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAppsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAppsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Apps) > 0 {
		for iNdEx := len(m.Apps) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Apps[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryExtendedPairVaultRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryExtendedPairVaultRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryExtendedPairVaultRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryExtendedPairVaultResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryExtendedPairVaultResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryExtendedPairVaultResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.PairVault.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryAllExtendedPairVaultsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllExtendedPairVaultsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllExtendedPairVaultsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllExtendedPairVaultsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllExtendedPairVaultsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllExtendedPairVaultsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.PairVault) > 0 {
		for iNdEx := len(m.PairVault) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PairVault[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllExtendedPairVaultsByAppRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllExtendedPairVaultsByAppRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllExtendedPairVaultsByAppRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.AppId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.AppId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllExtendedPairVaultsByAppResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllExtendedPairVaultsByAppResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllExtendedPairVaultsByAppResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ExtendedPair) > 0 {
		for iNdEx := len(m.ExtendedPair) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ExtendedPair[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllExtendedPairStableVaultsIDByAppRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllExtendedPairStableVaultsIDByAppRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllExtendedPairStableVaultsIDByAppRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.AppId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.AppId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllExtendedPairStableVaultsIDByAppResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllExtendedPairStableVaultsIDByAppResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllExtendedPairStableVaultsIDByAppResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ExtendedPairsId) > 0 {
		dAtA18 := make([]byte, len(m.ExtendedPairsId)*10)
		var j17 int
		for _, num := range m.ExtendedPairsId {
			for num >= 1<<7 {
				dAtA18[j17] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j17++
			}
			dAtA18[j17] = uint8(num)
			j17++
		}
		i -= j17
		copy(dAtA[i:], dAtA18[:j17])
		i = encodeVarintQuery(dAtA, i, uint64(j17))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllExtendedPairStableVaultsByAppRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllExtendedPairStableVaultsByAppRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllExtendedPairStableVaultsByAppRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.AppId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.AppId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllExtendedPairStableVaultsByAppResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllExtendedPairStableVaultsByAppResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllExtendedPairStableVaultsByAppResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ExtendedPair) > 0 {
		for iNdEx := len(m.ExtendedPair) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ExtendedPair[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryExtendedPairVaultsByAppWithoutStableRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryExtendedPairVaultsByAppWithoutStableRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryExtendedPairVaultsByAppWithoutStableRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.AppId != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.AppId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryExtendedPairVaultsByAppWithoutStableResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryExtendedPairVaultsByAppWithoutStableResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryExtendedPairVaultsByAppWithoutStableResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.ExtendedPair) > 0 {
		for iNdEx := len(m.ExtendedPair) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ExtendedPair[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryAssetsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAssetsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Assets) > 0 {
		for _, e := range m.Assets {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAssetRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovQuery(uint64(m.Id))
	}
	return n
}

func (m *QueryAssetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Asset.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryAssetPairsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAssetPairsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.PairsInfo) > 0 {
		for _, e := range m.PairsInfo {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAssetPairRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovQuery(uint64(m.Id))
	}
	return n
}

func (m *QueryAssetPairResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.PairInfo.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryAppRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovQuery(uint64(m.Id))
	}
	return n
}

func (m *QueryAppResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.App.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryGovTokenByAppRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AppId != 0 {
		n += 1 + sovQuery(uint64(m.AppId))
	}
	return n
}

func (m *QueryGovTokenByAppResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GovAssetId != 0 {
		n += 1 + sovQuery(uint64(m.GovAssetId))
	}
	return n
}

func (m *QueryAppsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAppsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Apps) > 0 {
		for _, e := range m.Apps {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryExtendedPairVaultRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovQuery(uint64(m.Id))
	}
	return n
}

func (m *QueryExtendedPairVaultResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.PairVault.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryAllExtendedPairVaultsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllExtendedPairVaultsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.PairVault) > 0 {
		for _, e := range m.PairVault {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllExtendedPairVaultsByAppRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AppId != 0 {
		n += 1 + sovQuery(uint64(m.AppId))
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllExtendedPairVaultsByAppResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ExtendedPair) > 0 {
		for _, e := range m.ExtendedPair {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllExtendedPairStableVaultsIDByAppRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AppId != 0 {
		n += 1 + sovQuery(uint64(m.AppId))
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllExtendedPairStableVaultsIDByAppResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ExtendedPairsId) > 0 {
		l = 0
		for _, e := range m.ExtendedPairsId {
			l += sovQuery(uint64(e))
		}
		n += 1 + sovQuery(uint64(l)) + l
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllExtendedPairStableVaultsByAppRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AppId != 0 {
		n += 1 + sovQuery(uint64(m.AppId))
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllExtendedPairStableVaultsByAppResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ExtendedPair) > 0 {
		for _, e := range m.ExtendedPair {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryExtendedPairVaultsByAppWithoutStableRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AppId != 0 {
		n += 1 + sovQuery(uint64(m.AppId))
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryExtendedPairVaultsByAppWithoutStableResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ExtendedPair) > 0 {
		for _, e := range m.ExtendedPair {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryAssetsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAssetsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAssetsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAssetsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAssetsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAssetsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Assets", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Assets = append(m.Assets, Asset{})
			if err := m.Assets[len(m.Assets)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAssetRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAssetRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAssetRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAssetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAssetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAssetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Asset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Asset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAssetPairsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAssetPairsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAssetPairsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAssetPairsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAssetPairsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAssetPairsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PairsInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PairsInfo = append(m.PairsInfo, PairInfo{})
			if err := m.PairsInfo[len(m.PairsInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAssetPairRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAssetPairRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAssetPairRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAssetPairResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAssetPairResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAssetPairResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PairInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PairInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAppRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAppRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAppRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAppResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAppResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAppResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field App", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.App.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGovTokenByAppRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGovTokenByAppRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGovTokenByAppRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppId", wireType)
			}
			m.AppId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGovTokenByAppResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGovTokenByAppResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGovTokenByAppResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GovAssetId", wireType)
			}
			m.GovAssetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GovAssetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAppsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAppsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAppsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAppsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAppsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAppsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Apps", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Apps = append(m.Apps, AppData{})
			if err := m.Apps[len(m.Apps)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryExtendedPairVaultRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryExtendedPairVaultRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryExtendedPairVaultRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryExtendedPairVaultResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryExtendedPairVaultResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryExtendedPairVaultResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PairVault", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PairVault.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllExtendedPairVaultsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllExtendedPairVaultsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllExtendedPairVaultsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllExtendedPairVaultsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllExtendedPairVaultsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllExtendedPairVaultsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PairVault", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PairVault = append(m.PairVault, ExtendedPairVault{})
			if err := m.PairVault[len(m.PairVault)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllExtendedPairVaultsByAppRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllExtendedPairVaultsByAppRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllExtendedPairVaultsByAppRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppId", wireType)
			}
			m.AppId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllExtendedPairVaultsByAppResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllExtendedPairVaultsByAppResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllExtendedPairVaultsByAppResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendedPair", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExtendedPair = append(m.ExtendedPair, ExtendedPairVault{})
			if err := m.ExtendedPair[len(m.ExtendedPair)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllExtendedPairStableVaultsIDByAppRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllExtendedPairStableVaultsIDByAppRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllExtendedPairStableVaultsIDByAppRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppId", wireType)
			}
			m.AppId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllExtendedPairStableVaultsIDByAppResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllExtendedPairStableVaultsIDByAppResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllExtendedPairStableVaultsIDByAppResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowQuery
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ExtendedPairsId = append(m.ExtendedPairsId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowQuery
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthQuery
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthQuery
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ExtendedPairsId) == 0 {
					m.ExtendedPairsId = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowQuery
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ExtendedPairsId = append(m.ExtendedPairsId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendedPairsId", wireType)
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllExtendedPairStableVaultsByAppRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllExtendedPairStableVaultsByAppRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllExtendedPairStableVaultsByAppRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppId", wireType)
			}
			m.AppId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllExtendedPairStableVaultsByAppResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllExtendedPairStableVaultsByAppResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllExtendedPairStableVaultsByAppResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendedPair", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExtendedPair = append(m.ExtendedPair, ExtendedPairVault{})
			if err := m.ExtendedPair[len(m.ExtendedPair)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryExtendedPairVaultsByAppWithoutStableRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryExtendedPairVaultsByAppWithoutStableRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryExtendedPairVaultsByAppWithoutStableRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppId", wireType)
			}
			m.AppId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryExtendedPairVaultsByAppWithoutStableResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryExtendedPairVaultsByAppWithoutStableResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryExtendedPairVaultsByAppWithoutStableResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendedPair", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExtendedPair = append(m.ExtendedPair, ExtendedPairVault{})
			if err := m.ExtendedPair[len(m.ExtendedPair)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
